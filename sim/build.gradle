def packageName = "blackstrom-sim"
def packageDescription = "Blackstrom simulation toolkit"

dependencies {
  api project(":")
  
  testImplementation "com.obsidiandynamics.fulcrum:fulcrum-fslock:${fulcrumVersion}"
  testImplementation "com.obsidiandynamics.fulcrum:fulcrum-jgroups:${fulcrumVersion}"
  testImplementation "com.obsidiandynamics.fulcrum:fulcrum-select:${fulcrumVersion}"
  testImplementation "org.jgroups:jgroups:${jgroupsVersion}"

  testImplementation "com.obsidiandynamics.fulcrum:fulcrum-launcher:${fulcrumVersion}"
}

task launch(dependsOn: testClasses) {
  doLast {
    def launcherClasses = new ArrayList()
    launcherClasses += "com.obsidiandynamics.blackstrom.bank.BalancedRandomBankTransferTest"
    launcherClasses += "com.obsidiandynamics.blackstrom.bank.MultiNodeQueueRandomBankTransferTest"
    launcherClasses += "com.obsidiandynamics.blackstrom.ledger.BalancedLedgerTest"
    launcherClasses += "com.obsidiandynamics.blackstrom.rig.MultiNodeQueueRigTest"
    
    def perfJvmArgs = "-XX:-MaxFDLimit -XX:+TieredCompilation -XX:+UseNUMA -XX:+UseCondCardMark " + 
                      "-Xms2G -Xmx2G -Xss1M -XX:+UseG1GC -XX:MaxGCPauseMillis=200 " +
                      "-XX:InitiatingHeapOccupancyPercent=0 -Djava.net.preferIPv4Stack=true " + 
                      "-Dlauncher.package.compress.level=3"
    javaexec {
      systemProperties = System.properties
      classpath = sourceSets.test.runtimeClasspath
      mainClass = "com.obsidiandynamics.launcher.Launcher"
      args = launcherClasses
      jvmArgs = Arrays.asList(perfJvmArgs.split(" ")) + baseJvmArgs
      standardInput = System.in
    }
  }
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId = packageName
      from components.java
      pom {
        name = packageName
        description = packageDescription
        url = 'https://github.com/obsidiandynamics/blackstrom'
        licenses {
          license {
            name = 'BSD 3-Clause License'
            url = 'https://opensource.org/licenses/BSD-3-Clause'
          }
        }
        developers {
          developer {
            id = 'ekoutanov'
            name = 'Emil Koutanov'
            email = 'ekoutanov@gmail.com'
          }
        }
        scm {
          connection = 'scm:git:git://github.com/obsidiandynamics/blackstrom.git'
          developerConnection = 'scm:git:ssh://github.com/obsidiandynamics/blackstrom.git'
          url = 'https://github.com/obsidiandynamics/blackstrom'
        }
      }
    }
  }
}
